<?php
// cbone_services.module
/**
* Implementation of hook_menu
*/
function cbone_services_menu() {
  $items = array();
  //menu for pro brochures the Listing
	$items['vendor/order-confirmation'] = array(
		'title'				=> 'Vendor Order Confirmation',
		'description'		=> 'Vendor Order Confirmation',
		'page callback'		=> 'cbone_vendor_order_confirm',
		'access callback'	=> TRUE,
	);
	$items['vendor/order-track'] = array(
		'title'				=> 'Vendor Order Track',
		'description'		=> 'Vendor Order Track',
		'page callback'		=> 'cbone_vendor_order_track',
		'access callback'	=> TRUE,
	);
 return $items;
}
/**
 * Implementation of hook_services_resources().
 */
function cbone_services_services_resources() {
	return array(
		'pro_brochures' => array(
			'operations' => array(
				'retrieve' => array(
					'help' => 'Pro Brochures PDF',        
					'file' => array('type' => 'inc', 'module' => 'cbone_services', 'name' => 'includes/cbone_services'),
					'callback' => '_pro_brochures_retrieve',
					'access callback' => 'cbone_services_access',
					//'access callback' => 'services_access_menu',
					//'access callback' => '_pro_brochures_access',
					//'access arguments' => array('view'),
					//'access arguments append' => TRUE,
					'args' => array(
						array(
							'name' => 'nid',
							'type' => 'int',
							'description' => 'The nid of the listing node',
							'source' => array('path' => '0'),
							'optional' => FALSE,
						),
						array(
							'name' => 'auth',
							'type' => 'string',
							'description' => 'The secrect key of vender',
							'source' => array('path' => '0'),
							'optional' => FALSE,
						),
					),
				),
			),
		),
		'postcards' => array(
			'operations' => array(
				'retrieve' => array(
					'help' => 'Post Cards PDF',        
					'file' => array('type' => 'inc', 'module' => 'cbone_services', 'name' => 'includes/cbone_services'),
					'callback' => '_postcards_retrieve',
					'access callback' => 'cbone_services_access',
					//'access arguments' => array(2),
					//'access callback' => 'services_access_menu',
					//'access callback' => '_pro_brochures_access',
					//'access arguments' => array('view'),
					//'access arguments append' => TRUE,
					'args' => array(
						array(
							'name' => 'nid',
							'type' => 'int',
							'description' => 'The nid of the listing node',
							'source' => array('path' => '0'),
							'optional' => FALSE,
						),
						array(
							'name' => 'auth',
							'type' => 'string',
							'description' => 'The secrect key of vender',
							'source' => array('path' => '0'),
							'optional' => FALSE,
						),
					),
				),
			),
		),
	);
}
/**
 * Implements hook_node_insert()
 * to generate and save Secret Key for vendor
 **/
function cbone_services_node_insert($node) {
	if($node->is_new && $node->type == 'vendor') {
		if(!isset($node->field_secret_key['und']['0']['value'])){
			//$node = node_load($node->nid);
			$secret_key = md5($node->nid);
			$node->field_secret_key['und']['0']['value'] = $secret_key;
			//node_save($node);
		}
		//$nid = $node->nid;
		//generate_vendor_secret_key($nid);
	}
}
/**
 * Callback function generate_vendor_secret_key()
 * to generate and save Secret Key
 * for vendor in vender node
 **/
function generate_vendor_secret_key($nid) {
	$vendor_node = node_load($nid);
	$secret_key = md5($vendor_node->nid);
	$vendor_node->field_secret_key['und']['0']['value'] = $secret_key;
	node_save($vendor_node);exit(0);
	return $vendor_node->nid;
}
/**
 * Implements hook_node_presave()
 * to generate and save Secret Key for vendor
 **/
function cbone_services_node_presave($node) {
	if ($node->nid && $node->type == 'vendor') {
		if(!isset($node->field_secret_key['und']['0']['value'])){
			$secret_key = md5($node->nid);
			$node->field_secret_key['und']['0']['value'] = $secret_key;
		}
	}
}
/**
 * Callback function cbone_vendor_order_confirm()
 * URL access by vender to confirm the JSON data received
 **/
function cbone_vendor_order_confirm(){
	$default_vendor = variable_get('mc_print_vendor', '0');
	$vendor_detail = node_load($default_vendor);
	$vender_auth = $vendor_detail->field_secret_key['und']['0']['value'];
	if($vender_auth == $_GET['auth']){
		//Insert in custom table cbone_listing_approve_pdf after confirm about JSON file
		$mc_pdf_detail = node_load($_GET['pdf']);
		$mc_pdf_detail->field_vendor_order_id['und']['0']['value'] = $_GET['vendor_order_id'];
		if($_GET['vendor_order_status'] == 'accepted') {
			$mcpdf_tid = array_shift(taxonomy_get_term_by_name('Print job in progress', 'marketing_concierge_pdf_status'))->tid;
			$mc_pdf_detail->field_mc_pdf_status['und']['0']['tid'] = $mcpdf_tid;
		}
		else if($_GET['vendor_order_status'] == 'error') {
			$mc_pdf_detail->field_vendor_message['und']['0']['value'] = $_GET['vendor_message'];
			$query = db_select('cbone_listing_approve_pdf', 'lap')
				->fields('lap')
				->condition('pnid', $mc_pdf_detail->nid, '=');
			$print_detail = $query->execute()->fetchObject();
			//print "<pre>";print_r($print_detail);
			$query = db_select('mc_notifications', 'mcn')
				->fields('mcn')
				->condition('mc_status', 'Returned to MC - Vender Error', '=')
				->condition('title', 'Printer error', '=');
			$mc_notification = $query->execute()->fetchObject();
			//print "<pre>";print_r($mc_notification);exit;
			$message = mc_notifications_vendor_token_replace($mc_notification->body, $print_detail->lnid, $print_detail->pnid, $print_detail->pdf_section);
			//email message (shown below) will be sent to the Marketing Coordinator.
		}
		node_save($mc_pdf_detail);
		db_merge('cbone_listing_approve_pdf')
			->key(array('pnid' => $_GET['pdf']))
			->fields(array(
				'pnid' => $_GET['pdf'],
				'vendor_order_id' => $_GET['vendor_order_id'],
				'vendor_order_status' => $_GET['vendor_order_status'],
				'vendor_message' => $_GET['vendor_message'],
				'confirm' => REQUEST_TIME,
			))
			->execute();
		drupal_set_message(t('Thank you, order confirm'));
		return 'Thank you, order confirm.<br/><br/>Mail Message:<br/>'.$message;
	}
	else {
		return 'You are not authorize to access this page';
	}
}
/**
 * Callback function cbone_vendor_order_track()
 * URL access by vender after shipped the order to office
 **/
function cbone_vendor_order_track(){
	//Insert in custom table cbone_listing_approve_pdf after confirm about JSON file
	$mc_pdf_detail = node_load($_GET['pdf']);
	//$mc_pdf_detail->field_vendor_order_id['und']['0']['value'] = $_GET['vendor_order_id'];
	$mc_pdf_detail->field_shipping_tracking['und']['0']['value'] = $_GET['shipment_tracking'];
	node_save($mc_pdf_detail);
	db_merge('cbone_listing_approve_pdf')
		->key(array('pnid' => $_GET['pdf']))
		->fields(array(
			'pnid' => $_GET['pdf'],
			'vendor_order_id' => $_GET['vendor_order_id'],
			'vendor_order_status' => $_GET['vendor_order_status'],
			'shipment_tracking' => $_GET['shipment_tracking'],
			'shipped' => REQUEST_TIME,
		))
		->execute();
	drupal_set_message(t('Thank you, order confirm'));
	return 'Thank you, order confirm';
}
/** Gets a pdf node object by listing nid.
 *
 * @param int $nid
 * @return object
 */
function cbone_get_brochures_pdf($nid) {
	$pdf_section = 'pro brochure';
	$data = cbone_get_pdf_detail($nid, $pdf_section);
	return $data;
}
/** Gets a pdf node object by listing nid.
 *
 * @param int $nid
 * @return object
 */
function cbone_get_postcards_pdf($nid) {
	$pdf_section = 'post card';
	$data = cbone_get_pdf_detail($nid, $pdf_section);
	return $data;
}
/**
 * Callback function cbone_get_pdf_detail()
 * return pdf_section detail
 */
function cbone_get_pdf_detail($nid, $pdf_section) {
	//listing nid/node
	$listing_node = node_load($nid);
	$agent_uid = isset($listing_node->field_lms_agent_uid['und']['0']['uid']) ? $listing_node->field_lms_agent_uid['und']['0']['uid'] : $listing_node->uid;
	$agent_detail = user_load($agent_uid);
	$mc_uid  = $listing_node->field_lms_marketing_coordinator['und']['0']['uid'];
	$mc_detail = user_load($mc_uid);
	//Listing office
	$office_nid = $listing_node->field_office_ref['und']['0']['nid'];
	$office_node = node_load($office_nid);
	//mcpdf Node/NID
	$mcpdf_tid = array_shift(taxonomy_get_term_by_name('Print Processing', 'marketing_concierge_pdf_status'))->tid;
	$query = db_select('field_data_field_mc_pdf_status', 'mcs');
	$query->innerJoin('field_data_field_lms_listing_reference', 'lr', 'lr.entity_id = mcs.entity_id');
	$query->innerJoin('field_data_field_template_reference', 'tr', 'tr.entity_id = mcs.entity_id');
	$query->innerJoin('field_data_field_pdf_section', 'pdfs', 'pdfs.entity_id = tr.field_template_reference_nid');
	$query->fields('mcs', array('entity_id'));
	$query->condition('mcs.field_mc_pdf_status_tid', $mcpdf_tid, '=');
	$query->condition('lr.field_lms_listing_reference_nid', $nid, '=');
	$query->condition('lr.bundle', 'mc_pdf', 'LIKE');
	$query->condition('pdfs.field_pdf_section_value', $pdf_section, 'LIKE');
	$mc_pdf_nid = $query->execute()->fetchField();
	$mc_pdf_node = node_load($mc_pdf_nid);
	//template name
	$mc_pdf_template_nid = $mc_pdf_node->field_template_reference['und']['0']['nid'];
	$mc_pdf_template_node = node_load($mc_pdf_template_nid);
	//PDF File
	$pdf_uri = file_create_url($mc_pdf_node->field_generated_pdf['und']['0']['uri']);
	//Order Id	
	$query = db_select('field_data_field_lms_listing_reference', 'lr');
	$query->fields('lr', array('entity_id'));
	$query->condition('lr.field_lms_listing_reference_nid', $nid, '=');
	$query->condition('lr.bundle', 'commerce_order', 'LIKE');
	$Order_id = $query->execute()->fetchField();
	$order = commerce_order_load($Order_id);
	//print "<pre>";print_r($order);exit;
	$line_item = commerce_line_item_load($order->commerce_line_items['und']['0']['line_item_id']);
	$product = commerce_product_load($line_item->commerce_product['und']['0']['product_id']);
	//Mailing List
	$just_listed = isset($order->field_just_listed_mail_list['und']['0']['uri']) ? file_create_url($order->field_just_listed_mail_list['und']['0']['uri']) : '';
	$just_sold = isset($order->field_just_sold_mail_list['und']['0']['uri']) ? file_create_url($order->field_just_sold_mail_list['und']['0']['uri']) : '';
	
	$output = array(
		'order_identifiers' => array(
			'order_id' => $Order_id,
			'pdf_reference_id' => $mc_pdf_nid,
		),
		'product' => array(
			'product_package' => $product->title,
			'product_type' => ucwords($pdf_section),
			'design' => $mc_pdf_template_node->title,
		),
		'pdf_link' => array(
			'pdf_uri' => $pdf_uri,
		),
		'agent_name_and_contact' => array(
			'agent_first_name' => isset($agent_detail->field_first_name['und']['0']['value']) ? $agent_detail->field_first_name['und']['0']['value'] : '',
			'agent_last_name' => isset($agent_detail->field_last_name['und']['0']['value']) ? $agent_detail->field_last_name['und']['0']['value'] : '',
			'agent_phone' => isset($agent_detail->field_phone_direct['und']['0']['value']) ? $agent_detail->field_phone_direct['und']['0']['value'] : '',
			'agent_email' => isset($agent_detail->field_person_email['und']['0']['value']) ? $agent_detail->field_person_email['und']['0']['value'] : $agent_detail->mail,
		),
		'marketing_coordinator_name_and_contact_info' => array(
			'mc_first_name' => isset($mc_detail->field_first_name['und']['0']['value']) ? $mc_detail->field_first_name['und']['0']['value'] : '',
			'mc_last_name' => isset($mc_detail->field_last_name['und']['0']['value']) ? $mc_detail->field_last_name['und']['0']['value'] : '',
			'mc_phone' => isset($mc_detail->field_phone_direct['und']['0']['value']) ? $mc_detail->field_phone_direct['und']['0']['value'] : '',
			'mc_email' => isset($mc_detail->field_person_email['und']['0']['value']) ? $mc_detail->field_person_email['und']['0']['value'] : $mc_detail->mail,
		),
		'shipping_information' => array(
			'shipping_name' => $office_node->title,
			'shipping_address' => isset($office_node->field_office_address['und']['0']['value']) ? $office_node->field_office_address['und']['0']['value'] : '',
			'shipping_city' => isset($office_node->field_office_city['und']['0']['value']) ? $office_node->field_office_city['und']['0']['value'] : '',
			'shipping_state' => isset($office_node->field_office_state['und']['0']['value']) ? $office_node->field_office_state['und']['0']['value'] : '',
			'shipping_zip' => isset($office_node->field_office_zip['und']['0']['value']) ? $office_node->field_office_zip['und']['0']['value'] : '',
			'shipping_phone' => isset($office_node->field_office_phone['und']['0']['value']) ? $office_node->field_office_phone['und']['0']['value'] : '',
		),
	);
	if(isset($order->field_mail_to_a_radius['und']['0']['value']) && $order->field_mail_to_a_radius['und']['0']['value'] == 1) {
		$output['mail_to_radius'] = array(
			'radius_address' => isset($listing_node->field_lms_listing_address['und']['0']['value']) ? $listing_node->field_lms_listing_address['und']['0']['value'] : '',
			'radius_city' => isset($listing_node->field_lms_listing_city['und']['0']['value']) ? $listing_node->field_lms_listing_city['und']['0']['value'] : '',
			'radius_state' => isset($listing_node->field_lms_listing_state['und']['0']['value']) ? $listing_node->field_lms_listing_state['und']['0']['value'] : '',
			'radius_zip' => isset($listing_node->field_lms_listing_zip['und']['0']['value']) ? $listing_node->field_lms_listing_zip['und']['0']['value'] : '',
		);
	}
	if($pdf_section == 'pro brochure') {
		/*$output['mailing_list'] = array(
			'mailing_list_uri' => array(
				'just_listed' => $just_listed,
				'just_sold' => $just_sold,
			),
		);*/
		$output['extra_prints'] = array(
			'extra_pro_brochures' => isset($order->field_just_pro_brochure['und']['0']['value']) ? $order->field_just_pro_brochure['und']['0']['value'] : 0,
		);
	}
	else if($pdf_section == 'post card') {
		if($mc_pdf_node->field_postcard_type['und'][0]['value'] == 'listed') {
			$output['mailing_list'] = array(
				'mailing_list_uri' => $just_listed,
			);
			$output['extra_prints'] = array(
				'extra_just_listed_postcards' => isset($order->field_just_listed_postcard['und']['0']['value']) ? $order->field_just_listed_postcard['und']['0']['value'] : 0,
			);
		}
		else if($mc_pdf_node->field_postcard_type['und'][0]['value'] == 'sold') {
			$output['mailing_list'] = array(
				'mailing_list_uri' => $just_sold,
			);
			$output['extra_prints'] = array(
				'extra_just_sold_postcards' => isset($order->field_just_sold_postcard['und']['0']['value']) ? $order->field_just_sold_postcard['und']['0']['value'] : 0,
			);
		}
	}
	return $output;
}
