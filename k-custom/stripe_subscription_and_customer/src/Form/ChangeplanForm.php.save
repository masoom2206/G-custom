<?php

namespace Drupal\stripe_subscription_and_customer\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\PrivateTempStoreFactory;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\CloseModalDialogCommand;
use Drupal\Core\Ajax\RedirectCommand;

/**
 * Class ChangeplanForm.
 */
class ChangeplanForm extends FormBase {

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return 'changeplan_form';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state, $pricing = NULL) {
    $form['#prefix'] = '<div id="ajax_form_multistep_form"><div id="result-message result_message message"></div>';
    $form['#suffix'] = '</div>';
    $form['markup'] = [
     '#markup' => '<div class="step">Are you sure you want to change from the {current plan name} plan to the {selected} plan? Changes will take effect immediately but you will not be billed until your next billing date.</div>'
    ];
    $form['pricing'] = [
      '#type' => 'hidden',
      '#title' => $this->t('pricing'),
      '#weight' => '0',
      '#defalut_value' => $pricing,
    ];
    $form['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Submit'),
    ];
    $form['buttons']['forward'] = array(
      '#type' => 'submit',
      '#value' => t('CHANGE PLAN'),
      '#prefix' => '<div class="step1-button">',
      '#suffix' => '</div>',
      '#attributes' => ['class' => ['subbutton']],
      '#ajax' => array(
        // We pass in the wrapper we created at the start of the form
        'wrapper' => 'ajax_form_multistep_form',
        // We pass a callback function we will use later to render the form for the user
        'callback' => '::ajax_form_change_plan_form_ajax_callback',
        'event' => 'click',
      ),
    );
    $form['buttons']['cancel'] = array(
      '#type' => 'submit',
      '#value' => t('cancel'),
      '#prefix' => '<div class="step1-button">',
      '#suffix' => '</div>',
      '#limit_validation_errors' => array(),
      '#attributes' => ['class' => ['calbutton']],
      '#ajax' => array(
        // We pass in the wrapper we created at the start of the form
        'wrapper' => 'ajax_form_multistep_form',
        // We pass a callback function we will use later to render the form for the user
        'callback' => '::ajax_form_multistep_form_ajax_cancel',
        'event' => 'click',
      ),
    );
    return $form;
  }

  /**
   * {@inheritdoc}
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    foreach ($form_state->getValues() as $key => $value) {
      // @TODO: Validate fields.
    }
    parent::validateForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    // Display result.
    foreach ($form_state->getValues() as $key => $value) {
      \Drupal::messenger()->addMessage($key . ': ' . ($key === 'text_format'?$value['value']:$value));
    }
  }
  public function ajax_form_multistep_form_ajax_cancel(array &$form, FormStateInterface $form_state) {
    $messages = \Drupal::messenger()->deleteAll();
    $response = new AjaxResponse();
    $response->addCommand(new CloseModalDialogCommand());
    return $response;	 
  }
}
